name: 'JAVA Case study end to end flow'
on: 
 push:

jobs:
  lint-code:
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout Repository'
        uses: actions/checkout@v3
      - name: Lint Code Base
        uses: github/super-linter/slim@v4
        env:
          VALIDATE_ALL_CODEBASE: true
          DEFAULT_BRANCH: develop
          DISABLE_ERRORS: true
          VALIDATE_JAVA: true
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-code:
    runs-on: ubuntu-latest
    needs:  lint-code
    steps:
      - name: 'Checkout Repository'
        uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
          settings-path: ${{ github.workspace }} # location for the settings.xml file
          cache: maven

      - name: Build with Maven
        run: |
          mvn verify sonar:sonar \
          -Dsonar.projectKey=santebe_AppWeb-JuiceShopDevSec \
          -Dsonar.organization=santebe \
          -Dsonar.host.url=https://sonarcloud.io
          
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

 # snyk-security-scan: EU estou utilizando MEND BOLT para code scaning e SCA

  dast-zap-scan:
    runs-on: ubuntu-latest
    needs: snyk-security-scan
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: develop
      - name: ZAP Scan
        uses: zaproxy/action-baseline@v0.7.0
        with:
          docker_name: 'owasp/zap2docker-stable'
          target: 'http://testasp.vulnweb.com'
          rules_file_name: '.zap/rules.tsv'
          cmd_options: '-a'
